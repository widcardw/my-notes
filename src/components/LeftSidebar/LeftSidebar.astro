---
// import { getLanguageFromURL } from '~/languages';
import { SIDEBAR } from '~/config';

type Props = {
  currentPage: string;
};

const { currentPage } = Astro.props as Props;
const currentPageMatch = currentPage.endsWith('/')
  ? currentPage.slice(1, -1)
  : currentPage.slice(1);
// const langCode = getLanguageFromURL(currentPage);
// const sidebar = SIDEBAR[langCode];
---

<nav aria-labelledby="grid-left">
  <ul class="nav-groups">
    {Object.entries(SIDEBAR).map(([header, children]) => (
      <li>
        <details class="nav-group" open={children && (children[0].link.split('/').shift() === currentPageMatch.split('/').shift())}>
          <summary>
            <h2 class="heading">{header}</h2>
          </summary>
          <div class="nav-body">
            {children.map((child) => {
              const url = Astro.site?.pathname + child.link;
              return (
                <li class="nav-link">
                  <a href={url} aria-current={currentPageMatch === child.link ? 'page' : false}>
                    {child.text}
                  </a>
                </li>
              );
            })}
          </div>
        </details>
      </li>
    ))}
  </ul>
</nav>

<script is:inline type="module">
  import { onMount } from 'solid-js'
  onMount(() => {
    window.addEventListener('DOMContentLoaded', () => {
      var target = document.querySelector('[aria-current="page"]');
      if (target && target.offsetTop > window.innerHeight - 100) {
        document.querySelector('.nav-groups').scrollTop = target.offsetTop;
      }
    })
  })
</script>

<style>
  nav {
    width: 100%;
    margin-right: 1rem;
  }

  .heading {
    cursor: pointer;
  }

  .nav-groups {
    height: 100%;
    padding: 2rem 0;
    overflow-x: visible;
    overflow-y: auto;
    max-height: 100vh;
  }

  summary::marker {
    content: '';
  }

  .nav-group > .nav-body {
    margin-left: 0.5rem;
  }

  summary::-webkit-details-marker {
    display: none;
  }
  
  .nav-groups > li + li {
    margin-top: 1rem;
  }

  .nav-groups > :first-child {
    padding-top: var(--doc-padding);
  }

  .nav-groups > :last-child {
    padding-bottom: 2rem;
    margin-bottom: var(--theme-navbar-height);
  }

  .nav-group-title {
    font-size: 1rem;
    font-weight: 700;
    padding: 0.1rem 1rem;
    text-transform: uppercase;
    margin-bottom: 0.5rem;
  }

  .nav-link a {
    font-size: 1rem;
    margin: 1px;
    padding: 0.3rem 1rem;
    font: inherit;
    color: inherit;
    text-decoration: none;
    display: block;
    border-radius: 0.2rem;
  }

  .nav-link a:hover,
  .nav-link a:focus {
    background-color: var(--theme-bg-hover);
  }

  .nav-link a[aria-current='page'] {
    color: var(--theme-text-accent);
    background-color: var(--theme-bg-accent);
    font-weight: 600;
  }

  @media (min-width: 50em) {
    .nav-groups {
      padding: 0;
    }
  }
</style>

<style is:global>
  :root.theme-dark .nav-link a[aria-current='page'] {
    color: hsla(var(--color-base-white), 100%, 1);
  }
</style>
