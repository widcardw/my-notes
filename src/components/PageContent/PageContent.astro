---
import type { Frontmatter } from '~/config';
import MoreMenu from '../RightSidebar/MoreMenu.astro';
import TableOfContents from '../RightSidebar/TableOfContents';
import type { MarkdownHeading } from 'astro';

type Props = {
  frontmatter: Frontmatter;
  headings: MarkdownHeading[];
  githubEditUrl: string;
};

const { frontmatter, headings, githubEditUrl } = Astro.props as Props;
const title = frontmatter.title;
---

<article id="article" class="content">
  <section class="main-section">
    <h1 class="content-title" id="overview">{title}</h1>
    <nav class="block sm:hidden">
      <TableOfContents client:media="(max-width: 50em)" headings={headings} />
    </nav>
    <slot />
  </section>
  <nav class="block sm:hidden">
    <MoreMenu editHref={githubEditUrl} />
  </nav>
</article>

<script type="module">
  if (document.querySelector('.mermaid')){
    const mermaid = (await import('https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs')).default
    mermaid.initialize({ 
      startOnLoad: false,
      theme: 'neutral',
    })
    mermaid.run().then(() => {
      const els = document.querySelectorAll('.mermaid')
      for (const el of els) {
        el.classList.remove('loading')
      }
    })
  }
  if (document.querySelector('script[type="WaveDrom"]')) {
    console.log('has wavedrom')
    const skin = document.createElement('script')
    skin.src = 'https://cdnjs.cloudflare.com/ajax/libs/wavedrom/3.1.0/skins/default.js'
    skin.type = 'text/javascript'
    document.body.appendChild(skin)
    await import('https://cdnjs.cloudflare.com/ajax/libs/wavedrom/3.1.0/wavedrom.min.js')
    setTimeout(() => {
      WaveDrom.ProcessAll()
    }, 1000)
  }
</script>

<style>
  .content {
    padding: 0;
    max-width: 75ch;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .content > section {
    margin-bottom: 4rem;
  }

  .block {
    display: block;
  }

  @media (min-width: 50em) {
    .sm\:hidden {
      display: none;
    }
  }
</style>
